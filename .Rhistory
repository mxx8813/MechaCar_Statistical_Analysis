install.packages("tidyverse")
install.packages("jsonlite")
setwd("~/Documents/GitHub/01-Demo")
> x <- 3
> x <- 3
> x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
x[3]
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
demo_table[3,"Year"]
demo_table[3,"Year"]
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table[3,"Year"]
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample(1:nrow(demo_table), 3),]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
emo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(emo_table)
View(demo_table)
View(demo_table2)
View(emo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
View(demo_table2)
View(filter_table)
View(filter_table3)
View(filter_table2)
View(filter_table)
View(emo_table)
View(emo_table)
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
?read_csv
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
View(long_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
View(wide_table)
?gather
?spread
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2plt + geom_bar() #plot a bar plot
> plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
> plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
> plt + geom_bar() #plot a bar plot
?geom_bar()
plt <- ggplot(mpg,aes(x=class))
plt + geom_bar() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +theme(axis.text.x=element_text(angle=45,hjust=1))
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)']
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
setwd("~/Documents/GitHub/MechaCar_Statistical_Analysis")
